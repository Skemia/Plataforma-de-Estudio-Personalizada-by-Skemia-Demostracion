<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Skemia - Herramienta Educativa Integrada</title>
    <!-- Tailwind CSS desde CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Librerías para PDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <style>
        /* Estilos personalizados y utilidades de Tailwind */
        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        .page-content {
            display: none; /* Ocultar todas las páginas por defecto */
        }
        .page-content.active {
            display: block; /* Mostrar solo la página activa */
        }
        
        /* Estilos para el efecto de volteo 3D de la flashcard */
        .perspective-1000 { perspective: 1000px; }
        .transform-style-3d { transform-style: preserve-3d; }
        .backface-hidden { backface-visibility: hidden; -webkit-backface-visibility: hidden; }
        .rotate-y-180 { transform: rotateY(180deg); }

        /* Estilo para la barra de progreso discreta */
        .progress-bar-container {
            @apply w-full bg-gray-200 rounded-full h-2 overflow-hidden;
        }

        .progress-bar {
            @apply bg-purple-700 h-2 rounded-full transition-all duration-300 ease-in-out;
        }
    </style>
    <script>
        // Configuración de Tailwind para que coincida con el diseño
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'neutral-bg': '#f9f9f9',
                        'neutral-card': '#ffffff',
                        'neutral-border': '#e5e5e5',
                        'text-primary': '#1a1a1a',
                        'text-secondary': '#666666',
                        'brand-accent': '#5F476B',
                        'feedback-correct': '#22c55e',
                        'feedback-incorrect': '#ef4444',
                    },
                },
            },
        }
    </script>
</head>
<body class="bg-neutral-bg text-text-primary min-h-screen flex flex-col">

    <!-- Header y Navegación -->
    <header class="bg-neutral-card border-b border-neutral-border sticky top-0 z-10">
        <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
            <a href="#" class="text-xl font-bold text-brand-accent" data-page="home">Skemia</a>
            <div class="flex items-center space-x-4 sm:space-x-6 text-text-secondary">
                <a href="#" class="hover:text-text-primary" data-page="flashcards">Flashcards</a>
                <a href="#" class="hover:text-text-primary" data-page="quizzes">Quizzes</a>
                <a href="#" class="hover:text-text-primary" data-page="mindmap">Mapa Mental</a>
                <a href="#" class="hover:text-text-primary" data-page="audios">Audios</a>
                <a href="#" class="hover:text-text-primary" data-page="report">Informe</a>
            </div>
        </nav>
    </header>

    <!-- Contenedor principal para las páginas -->
    <main class="flex-grow container mx-auto px-6 py-8">
        
        <!-- Página de Inicio -->
        <section id="page-home" class="page-content active">
            <div class="grid lg:grid-cols-2 gap-16 items-center min-h-[60vh]">
                <div class="text-center lg:text-left">
                    <h1 class="text-4xl lg:text-5xl font-bold text-gray-800 mb-4 leading-tight">
                        Transforma tu manera de estudiar.
                    </h1>
                    <p class="text-lg text-gray-600 mb-8 max-w-lg mx-auto lg:mx-0">
                        Skemia te ofrece todas las herramientas que necesitas en un solo lugar. Flashcards, quizzes, mapas mentales y más, diseñados para un aprendizaje sin distracciones.
                    </p>
                    <a href="#" id="start-studying-btn" class="inline-block bg-brand-accent text-white font-bold py-3 px-8 rounded-lg shadow-lg hover:bg-opacity-90 transition-transform transform hover:scale-105">
                        Empezar a estudiar
                    </a>
                </div>
                <div class="hidden lg:block p-4">
                    <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
                        <defs>
                            <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" style="stop-color:rgb(230, 230, 250);stop-opacity:1" />
                                <stop offset="100%" style="stop-color:rgb(200, 200, 240);stop-opacity:1" />
                            </linearGradient>
                        </defs>
                        <path fill="url(#grad1)" d="M48.8,-63.9C63.2,-53.9,74.7,-40.1,79.8,-24.1C84.9,-8.1,83.6,10.2,75.4,24.3C67.2,38.5,52.1,48.6,37,56.5C21.9,64.4,6.9,70.1,-8.5,70.9C-24,71.7,-39.9,67.6,-51.9,58.3C-63.9,49,-72,34.5,-75.8,18.5C-79.6,2.5,-79.1,-15,-71.5,-29.4C-64,-43.8,-49.4,-55.1,-34.5,-63.7C-19.6,-72.3,-4.5,-78.2,10,-79.4C24.5,-80.6,34.5,-73.9,48.8,-63.9Z" transform="translate(100 100)" />
                        <circle cx="150" cy="50" r="10" fill="#5F476B"/>
                        <circle cx="60" cy="160" r="5" fill="#5F476B" opacity="0.7"/>
                        <rect x="40" y="40" width="20" height="20" rx="5" fill="#5F476B" opacity="0.5" transform="rotate(45 50 50)"/>
                    </svg>
                </div>
            </div>
        </section>

        <!-- Página de Flashcards -->
        <section id="page-flashcards" class="page-content">
            <div class="flex flex-col items-center space-y-8">
                <div class="w-full max-w-2xl text-center">
                    <h1 class="text-3xl font-bold mb-4">Flashcards</h1>
                    <div class="mb-6">
                        <label for="flashcards-temario-select" class="block text-sm font-medium text-text-secondary mb-1">Selecciona un temario:</label>
                        <select id="flashcards-temario-select" class="temario-selector w-full p-2 border border-neutral-border rounded-md bg-white"></select>
                    </div>
                </div>
                <div id="flashcard-container" class="w-full max-w-2xl">
                    <!-- Las tarjetas se renderizarán aquí -->
                </div>
                <div class="flex items-center space-x-4">
                    <button id="flashcard-prev" class="px-4 py-2 bg-neutral-card border rounded-md hover:bg-neutral-bg transition-transform transform hover:scale-105">Anterior</button>
                    <span id="flashcard-counter" class="text-text-secondary"></span>
                    <button id="flashcard-next" class="px-4 py-2 bg-neutral-card border rounded-md hover:bg-neutral-bg transition-transform transform hover:scale-105">Siguiente</button>
                </div>
            </div>
        </section>

        <!-- Página de Quizzes -->
        <section id="page-quizzes" class="page-content">
            <div class="max-w-2xl mx-auto">
                <div class="w-full text-center">
                    <h1 class="text-3xl font-bold mb-4">Quizzes</h1>
                    <div class="mb-6">
                        <label for="quizzes-temario-select" class="block text-sm font-medium text-text-secondary mb-1">Selecciona un temario:</label>
                        <select id="quizzes-temario-select" class="temario-selector w-full p-2 border border-neutral-border rounded-md bg-white"></select>
                    </div>
                </div>
                <div id="quiz-container">
                    <!-- El quiz se renderizará aquí -->
                </div>
            </div>
        </section>

        <!-- Página de Mapa Mental -->
        <section id="page-mindmap" class="page-content">
             <div class="max-w-2xl mx-auto text-center">
                <h1 class="text-3xl font-bold mb-4">Mapa Mental</h1>
                <div class="mb-6">
                    <label for="mindmap-temario-select" class="block text-sm font-medium text-text-secondary mb-1">Selecciona un temario:</label>
                    <select id="mindmap-temario-select" class="temario-selector w-full p-2 border border-neutral-border rounded-md bg-white"></select>
                </div>
                <!-- Contenedor para la URL del mapa mental -->
                <div id="mindmap-url-container">
                    <!-- La URL se inyectará aquí -->
                </div>
            </div>
        </section>

        <!-- Página de Audios -->
        <section id="page-audios" class="page-content">
             <div class="max-w-2xl mx-auto text-center">
                <h1 class="text-3xl font-bold mb-4">Audios Descargables</h1>
                <div class="mb-6">
                    <label for="audios-temario-select" class="block text-sm font-medium text-text-secondary mb-1">Selecciona un temario:</label>
                    <select id="audios-temario-select" class="temario-selector w-full p-2 border border-neutral-border rounded-md bg-white"></select>
                </div>
                <!-- Contenedor para la URL de los audios -->
                <div id="audios-url-container">
                    <!-- La URL se inyectará aquí -->
                </div>
            </div>
        </section>

        <!-- Página de Informes -->
        <section id="page-report" class="page-content">
            <div class="text-center">
                <h1 class="text-3xl font-bold mb-4">Generar Informe de Progreso</h1>
                 <div class="mb-8 max-w-md mx-auto">
                    <label for="report-temario-select" class="block text-sm font-medium text-text-secondary mb-1">Informe para el temario:</label>
                    <select id="report-temario-select" class="temario-selector w-full p-2 border border-neutral-border rounded-md bg-white"></select>
                </div>
                <p class="text-text-secondary mb-8">Haz clic en el botón para descargar tu informe en formato PDF.</p>
                <button id="generate-pdf-report" class="px-6 py-3 bg-brand-accent text-white rounded-lg shadow-md hover:bg-opacity-90">
                    Descargar Informe PDF
                </button>
            </div>
        </section>
    </main>
    
    <footer class="text-center py-4 text-text-secondary text-sm border-t border-neutral-border mt-8">
        © <span id="footer-year"></span> Skemia. Herramienta educativa.
    </footer>

    <script>
    document.addEventListener('DOMContentLoaded', () => {

        // --- DATOS SIMULADOS (En lugar de una llamada a la API) ---
        const MOCK_DATA = {
            temarios: [
                {
                    id: 't1',
                    name: '1. Desarrollo Web Básico',
                    flashcards: [
                        { front: "¿Qué significa HTML?", back: "HyperText Markup Language" },
                        { front: "¿Qué es CSS?", back: "Cascading Style Sheets. Es un lenguaje de diseño gráfico para definir y crear la presentación de un documento estructurado escrito en un lenguaje de marcado como HTML." }
                    ],
                    quizzes: [
                        { id: "q1-t1", prompt: "¿Qué etiqueta se usa para el párrafo más importante?", choices: [ { id: "a", text: "<h1>" }, { id: "b", text: "<p>" , correct: true}, { id: "c", text: "<main>" }, { id: "d", text: "<strong>" } ] }
                    ],
                    mindmapUrl: "https://app.mindmup.com/map/_/public/11f0a149814401314948a23d467bb88e1",
                    audiosUrl: "https://example.com/downloads/web-basico-audios.zip"
                },
                {
                    id: 't2',
                    name: '2. Conceptos de Psicología',
                    flashcards: [
                        { front: "¿Qué es la 'zona de confort'?", back: "Un estado psicológico en el que una persona se siente segura y a gusto, sin experimentar estrés ni ansiedad.", audioUrl: "https://dummyaudio.com/comfort-zone.mp3" },
                        { front: "Define 'sesgo de confirmación'.", back: "La tendencia a buscar, interpretar, favorecer y recordar información que confirma o apoya las creencias o hipótesis preexistentes." }
                    ],
                    quizzes: [
                        { id: "q1-t2", prompt: "¿Quién es considerado el padre del psicoanálisis?", choices: [ { id: "a", text: "Carl Jung" }, { id: "b", text: "B.F. Skinner" }, { id: "c", text: "Sigmund Freud", correct: true }, { id: "d", text: "Jean Piaget" } ] }
                    ],
                    mindmapUrl: "https://app.mindmup.com/map/_/public/9e2476594d4001314c330f576e344e6d1",
                    audiosUrl: "https://example.com/downloads/psicologia-audios.zip"
                },
                 {
                    id: 't3',
                    name: '3. Geografía Mundial',
                    flashcards: [
                        { front: "¿Cuál es la capital de Australia?", back: "Canberra" },
                        { front: "¿Río más largo del mundo?", back: "Nilo" }
                    ],
                    quizzes: [
                         { id: "q1-t3", prompt: "¿En qué continente está Egipto?", choices: [ { id: "a", text: "Asia" }, { id: "b", text: "África", correct: true }, { id: "c", text: "Europa" }, { id: "d", text: "América" } ] }
                    ],
                    mindmapUrl: "https://app.mindmup.com/map/_/public/56722d05f32a01311b7117185c825a091",
                    audiosUrl: "https://example.com/downloads/geografia-audios.zip"
                },
                {
                    id: 't4',
                    name: '4. Biología Celular',
                    flashcards: [ { front: '¿Qué es la mitocondria?', back: 'El orgánulo celular encargado de suministrar la mayor parte de la energía necesaria para la actividad celular (respiración celular).' } ],
                    quizzes: [ { id: "q1-t4", prompt: "¿Cuál es la función principal del núcleo celular?", choices: [ { id: "a", text: "Producir energía" }, { id: "b", text: "Contener el material genético", correct: true }, { id: "c", text: "Sintetizar proteínas" }, { id: "d", text: "Transportar sustancias" } ] } ],
                    mindmapUrl: "https://example.com/mindmap/biologia",
                    audiosUrl: "https://example.com/downloads/biologia-audios.zip"
                },
                {
                    id: 't5',
                    name: '5. Fundamentos de Programación',
                    flashcards: [ { front: '¿Qué es una variable?', back: 'Un espacio en la memoria del ordenador donde se almacena un valor que puede cambiar durante la ejecución de un programa.' } ],
                    quizzes: [ { id: "q1-t5", prompt: "¿Qué es un bucle 'for'?", choices: [ { id: "a", text: "Una decisión condicional" }, { id: "b", text: "Una función matemática" }, { id: "c", text: "Una estructura que repite código un número determinado de veces", correct: true }, { id: "d", text: "Una declaración de clase" } ] } ],
                    mindmapUrl: "https://example.com/mindmap/programacion",
                    audiosUrl: "https://example.com/downloads/programacion-audios.zip"
                },
                {
                    id: 't6',
                    name: '6. Literatura Española',
                    flashcards: [ { front: '¿Quién escribió "Don Quijote de la Mancha"?', back: 'Miguel de Cervantes' } ],
                    quizzes: [ { id: "q1-t6", prompt: "Autor de 'Cien años de soledad'", choices: [ { id: "a", text: "Gabriel García Márquez", correct: true }, { id: "b", text: "Mario Vargas Llosa" }, { id: "c", text: "Julio Cortázar" }, { id: "d", text: "Jorge Luis Borges" } ] } ],
                    mindmapUrl: "https://example.com/mindmap/literatura",
                    audiosUrl: "https://example.com/downloads/literatura-audios.zip"
                },
                {
                    id: 't7',
                    name: '7. Química Orgánica',
                    flashcards: [ { front: '¿Qué son los alcanos?', back: 'Hidrocarburos saturados, formados únicamente por átomos de carbono e hidrógeno unidos por enlaces sencillos.' } ],
                    quizzes: [ { id: "q1-t7", prompt: "¿Cuál es el elemento principal en la química orgánica?", choices: [ { id: "a", text: "Oxígeno" }, { id: "b", text: "Hidrógeno" }, { id: "c", text: "Carbono", correct: true }, { id: "d", text: "Nitrógeno" } ] } ],
                    mindmapUrl: "https://example.com/mindmap/quimica",
                    audiosUrl: "https://example.com/downloads/quimica-audios.zip"
                },
                {
                    id: 't8',
                    name: '8. Economía Básica',
                    flashcards: [ { front: 'Define "inflación"', back: 'El aumento generalizado y sostenido de los precios de los bienes y servicios en un país durante un período de tiempo.' } ],
                    quizzes: [ { id: "q1-t8", prompt: "¿Qué mide el PIB (Producto Interior Bruto)?", choices: [ { id: "a", text: "La deuda de un país" }, { id: "b", text: "El valor monetario de todos los bienes y servicios finales producidos en un país", correct: true }, { id: "c", text: "La tasa de desempleo" }, { id: "d", text: "Los beneficios de las empresas" } ] } ],
                    mindmapUrl: "https://example.com/mindmap/economia",
                    audiosUrl: "https://example.com/downloads/economia-audios.zip"
                },
                {
                    id: 't9',
                    name: '9. Historia del Arte',
                    flashcards: [ { front: '¿Quién pintó "La noche estrellada"?', back: 'Vincent van Gogh' } ],
                    quizzes: [ { id: "q1-t9", prompt: "¿A qué movimiento artístico pertenece Salvador Dalí?", choices: [ { id: "a", text: "Cubismo" }, { id: "b", text: "Impresionismo" }, { id: "c", text: "Surrealismo", correct: true }, { id: "d", text: "Barroco" } ] } ],
                    mindmapUrl: "https://example.com/mindmap/arte",
                    audiosUrl: "https://example.com/downloads/arte-audios.zip"
                },
                {
                    id: 't10',
                    name: '10. Música Clásica',
                    flashcards: [ { front: 'Compositor de "Las cuatro estaciones"', back: 'Antonio Vivaldi' } ],
                    quizzes: [ { id: "q1-t10", prompt: "¿Quién compuso la Novena Sinfonía?", choices: [ { id: "a", text: "Mozart" }, { id: "b", text: "Bach" }, { id: "c", text: "Chopin" }, { id: "d", text: "Beethoven", correct: true } ] } ],
                    mindmapUrl: "https://example.com/mindmap/musica",
                    audiosUrl: "https://example.com/downloads/musica-audios.zip"
                }
            ]
        };

        // --- ESTADO GLOBAL DE LA APLICACIÓN ---
        const AppState = {
            currentTemarioIndex: 0,
            flashcards: {
                currentIndex: 0,
                isFlipped: false,
            },
            quizzes: {
                currentIndex: 0,
                selectedAnswer: null,
                isAnswered: false,
                score: 0,
            }
        };

        // --- ELEMENTOS DEL DOM ---
        const pages = document.querySelectorAll('.page-content');
        const navLinks = document.querySelectorAll('nav a');
        const temarioSelectors = document.querySelectorAll('.temario-selector');
        document.getElementById('footer-year').textContent = new Date().getFullYear();

        // --- LÓGICA DE NAVEGACIÓN (ROUTER SIMPLE) ---
        function navigateTo(pageId) {
            pages.forEach(page => {
                page.classList.toggle('active', page.id === `page-${pageId}`);
            });
            
            const activePage = document.querySelector('.page-content.active');
            if (activePage) {
                const pageLogic = activePage.id.replace('page-', '');
                 // Ejecutar lógica específica de la página al cargar
                if (pageLogic === 'flashcards') renderFlashcard();
                if (pageLogic === 'quizzes') renderQuiz();
                if (pageLogic === 'mindmap') renderMindmapUrl();
                if (pageLogic === 'audios') renderAudiosUrl();
            }
        }

        navLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const pageId = e.currentTarget.dataset.page;
                if (pageId) navigateTo(pageId);
            });
        });
        
        // --- LÓGICA DE TEMARIOS ---
        function populateTemarioSelectors() {
            temarioSelectors.forEach(selector => {
                selector.innerHTML = ''; // Limpiar opciones existentes
                MOCK_DATA.temarios.forEach((temario, index) => {
                    const option = document.createElement('option');
                    option.value = index;
                    option.textContent = temario.name;
                    selector.appendChild(option);
                });
                selector.value = AppState.currentTemarioIndex;
            });
        }
        
        function handleTemarioChange(event) {
            const newIndex = parseInt(event.target.value, 10);
            AppState.currentTemarioIndex = newIndex;
            
            // Sincronizar todos los selectores
            temarioSelectors.forEach(s => s.value = newIndex);
            
            // Resetear estados y recargar la vista activa
            resetAllStates();
            navigateTo(document.querySelector('.page-content.active').id.replace('page-',''));
        }

        function resetAllStates() {
            // Reset Flashcards
            AppState.flashcards.currentIndex = 0;
            AppState.flashcards.isFlipped = false;
            // Reset Quizzes
            AppState.quizzes.currentIndex = 0;
            AppState.quizzes.selectedAnswer = null;
            AppState.quizzes.isAnswered = false;
            AppState.quizzes.score = 0;
        }

        temarioSelectors.forEach(selector => selector.addEventListener('change', handleTemarioChange));
        
        // --- LÓGICA BOTÓN PÁGINA DE INICIO ---
        const startStudyingBtn = document.getElementById('start-studying-btn');
        if (startStudyingBtn) {
            startStudyingBtn.addEventListener('click', (e) => {
                e.preventDefault();
                navigateTo('flashcards');
            });
        }

        // --- MÓDULO DE FLASHCARDS ---
        const fcContainer = document.getElementById('flashcard-container');
        const fcPrevBtn = document.getElementById('flashcard-prev');
        const fcNextBtn = document.getElementById('flashcard-next');
        const fcCounter = document.getElementById('flashcard-counter');

        function renderFlashcard() {
            const state = AppState.flashcards;
            const data = MOCK_DATA.temarios[AppState.currentTemarioIndex].flashcards;
            const card = data[state.currentIndex];
            
            if (!card) {
                fcContainer.innerHTML = `<div class="w-full max-w-2xl h-80 flex items-center justify-center"><p class="text-text-secondary">No hay flashcards en este temario.</p></div>`;
                fcCounter.textContent = '0 / 0';
                return;
            }

            fcContainer.innerHTML = `
                <div id="card-flipper" class="w-full h-80 rounded-xl shadow-xl cursor-pointer perspective-1000">
                    <div class="relative w-full h-full transition-transform duration-700 transform-style-3d ${state.isFlipped ? 'rotate-y-180' : ''}">
                        <!-- Front Face -->
                        <div class="absolute w-full h-full backface-hidden flex items-center justify-center p-6 bg-white border-2 border-neutral-border rounded-xl">
                            <p class="text-2xl font-semibold text-text-primary text-center">${card.front}</p>
                        </div>
                        <!-- Back Face -->
                        <div class="absolute w-full h-full backface-hidden rotate-y-180 flex flex-col items-center justify-center p-6 bg-neutral-bg border-2 border-neutral-border rounded-xl">
                            <p class="text-lg text-text-secondary text-center">${card.back}</p>
                            ${card.audioUrl ? `<audio controls src="${card.audioUrl}" class="mt-4" onclick="event.stopPropagation()"></audio>` : ''}
                        </div>
                    </div>
                </div>
            `;
            fcCounter.textContent = `${state.currentIndex + 1} / ${data.length}`;
            document.getElementById('card-flipper').addEventListener('click', () => {
                state.isFlipped = !state.isFlipped;
                renderFlashcard();
            });
        }
        
        fcPrevBtn.addEventListener('click', () => {
            const state = AppState.flashcards;
            const data = MOCK_DATA.temarios[AppState.currentTemarioIndex].flashcards;
            state.isFlipped = false;
            state.currentIndex = (state.currentIndex - 1 + data.length) % data.length;
            renderFlashcard();
        });
        
        fcNextBtn.addEventListener('click', () => {
            const state = AppState.flashcards;
            const data = MOCK_DATA.temarios[AppState.currentTemarioIndex].flashcards;
            state.isFlipped = false;
            state.currentIndex = (state.currentIndex + 1) % data.length;
            renderFlashcard();
        });

        // --- MÓDULO DE QUIZZES ---
        const quizContainer = document.getElementById('quiz-container');

        function renderQuiz() {
            const state = AppState.quizzes;
            const data = MOCK_DATA.temarios[AppState.currentTemarioIndex].quizzes;
            const question = data[state.currentIndex];
            
            if (data.length === 0) {
                 quizContainer.innerHTML = `<p class="text-text-secondary text-center">No hay quizzes en este temario.</p>`;
                 return;
            }

            if (!question) {
                quizContainer.innerHTML = `
                    <div class="bg-neutral-card p-8 rounded-lg border text-center">
                        <h2 class="text-2xl font-bold mb-4">¡Quiz Terminado!</h2>
                        <p class="text-lg">Tu puntuación final es: ${state.score} de ${data.length}</p>
                        <button id="quiz-restart" class="mt-6 px-6 py-2 bg-brand-accent text-white rounded-md">Reiniciar</button>
                    </div>
                `;
                document.getElementById('quiz-restart').addEventListener('click', () => {
                   state.currentIndex = 0;
                   state.score = 0;
                   state.isAnswered = false;
                   state.selectedAnswer = null;
                   renderQuiz();
                });
                return;
            }

            const getChoiceClass = (choice) => {
                let base = 'w-full text-left p-4 border rounded-md transition-colors flex items-center justify-between';
                if (!state.isAnswered) {
                    return `${base} ${state.selectedAnswer === choice.id ? 'bg-indigo-100 border-indigo-300' : 'bg-neutral-card hover:bg-neutral-bg'}`;
                }
                if (choice.correct) return `${base} bg-green-50 border-green-300`;
                if (state.selectedAnswer === choice.id && !choice.correct) return `${base} bg-red-50 border-red-300`;
                return `${base} bg-neutral-card opacity-60`;
            };

            quizContainer.innerHTML = `
                <div class="progress-bar-container mb-4">
                    <div class="progress-bar" style="width: ${((state.currentIndex + 1) / data.length) * 100}%"></div>
                </div>
                <p class="text-right text-sm text-text-secondary mb-8">Pregunta ${state.currentIndex + 1} de ${data.length}</p>
                <div class="bg-neutral-card p-8 rounded-lg border">
                    <h2 class="text-2xl font-semibold mb-6">${question.prompt}</h2>
                    <div class="space-y-3">
                        ${question.choices.map(choice => `
                            <button data-choice-id="${choice.id}" class="quiz-choice ${getChoiceClass(choice)}">
                                <span><span class="font-bold mr-2 uppercase">${choice.id})</span> ${choice.text}</span>
                                ${state.isAnswered && choice.correct ? '<span class="text-feedback-correct">✔</span>' : ''}
                                ${state.isAnswered && state.selectedAnswer === choice.id && !choice.correct ? '<span class="text-feedback-incorrect">✖</span>' : ''}
                            </button>
                        `).join('')}
                    </div>
                    <div class="mt-6 text-right">
                        ${state.isAnswered 
                            ? `<button id="quiz-next" class="px-6 py-2 bg-brand-accent text-white rounded-md">Siguiente</button>`
                            : `<button id="quiz-check" class="px-6 py-2 bg-brand-accent text-white rounded-md disabled:bg-gray-300" ${!state.selectedAnswer ? 'disabled' : ''}>Comprobar</button>`
                        }
                    </div>
                </div>
            `;
            
            // Add event listeners
            if(state.isAnswered) {
                document.getElementById('quiz-next').addEventListener('click', () => {
                    state.currentIndex++;
                    state.isAnswered = false;
                    state.selectedAnswer = null;
                    renderQuiz();
                });
            } else {
                document.getElementById('quiz-check').addEventListener('click', () => {
                    if (!state.selectedAnswer) return;
                    state.isAnswered = true;
                    const correct = question.choices.find(c => c.id === state.selectedAnswer)?.correct;
                    if(correct) state.score++;
                    renderQuiz();
                });
                document.querySelectorAll('.quiz-choice').forEach(btn => {
                    btn.addEventListener('click', () => {
                        if (state.isAnswered) return;
                        state.selectedAnswer = btn.dataset.choiceId;
                        renderQuiz(); // Re-render to show selection
                    });
                });
            }
        }
        
        // --- MÓDULO DE MAPA MENTAL ---
        function renderMindmapUrl() {
            const mindmapUrlContainer = document.getElementById('mindmap-url-container');
            const temario = MOCK_DATA.temarios[AppState.currentTemarioIndex];
            const url = temario.mindmapUrl;

            if (url) {
                mindmapUrlContainer.innerHTML = `
                    <div class="bg-neutral-card p-6 border border-neutral-border rounded-lg mt-8">
                        <p class="text-text-secondary mb-4">Accede al mapa mental interactivo a través del siguiente enlace:</p>
                        <a href="${url}" target="_blank" rel="noopener noreferrer" class="text-indigo-600 hover:text-indigo-800 break-all">${url}</a>
                    </div>
                `;
            } else {
                mindmapUrlContainer.innerHTML = `
                    <p class="text-text-secondary mt-8">No hay un mapa mental asociado a este temario.</p>
                `;
            }
        }

        // --- MÓDULO DE AUDIOS ---
        function renderAudiosUrl() {
            const audiosUrlContainer = document.getElementById('audios-url-container');
            const temario = MOCK_DATA.temarios[AppState.currentTemarioIndex];
            const url = temario.audiosUrl;

            if (url) {
                audiosUrlContainer.innerHTML = `
                    <div class="bg-neutral-card p-6 border border-neutral-border rounded-lg mt-8">
                        <p class="text-text-secondary mb-4">Descarga los audios del temario desde el siguiente enlace:</p>
                        <a href="${url}" target="_blank" rel="noopener noreferrer" class="text-indigo-600 hover:text-indigo-800 break-all">${url}</a>
                    </div>
                `;
            } else {
                audiosUrlContainer.innerHTML = `
                    <p class="text-text-secondary mt-8">No hay audios descargables asociados a este temario.</p>
                `;
            }
        }

        // --- MÓDULO DE INFORMES PDF ---
        document.getElementById('generate-pdf-report').addEventListener('click', () => {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            const temario = MOCK_DATA.temarios[AppState.currentTemarioIndex];
            const quizData = temario.quizzes;

            doc.setFontSize(22);
            doc.text("Informe de Progreso - Skemia", 105, 20, { align: 'center' });
            
            doc.setFontSize(14);
            doc.text("Detalles del Alumno", 14, 40);
            doc.setFontSize(12);
            doc.text(`Nombre: Alumno Ejemplo`, 14, 50);
            doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 55);

            doc.setFontSize(14);
            doc.text("Resultados del Quiz", 14, 70);
            doc.setFontSize(12);
            // Nota: El score se resetea al cambiar de temario. El informe mostrará el último resultado del temario seleccionado.
            const score = AppState.quizzes.score; 
            const total = quizData.length;
            doc.text(`Temario: ${temario.name}`, 14, 80);
            doc.text(`Puntuación: ${total > 0 ? ((score/total)*100).toFixed(0) : 'N/A'}%`, 14, 85);
            doc.text(`Aciertos: ${score} de ${total}`, 14, 90);
            
            doc.save(`informe-${temario.id}.pdf`);
        });

        // --- INICIALIZACIÓN ---
        populateTemarioSelectors();
        navigateTo('home');
    });
    </script>
</body>
</html>


